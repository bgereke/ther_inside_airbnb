% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_cleaning_utils.R
\name{factorize_city}
\alias{factorize_city}
\title{Clean columns with poorly coded city names and convert to factors.}
\usage{
factorize_city(
  df,
  city_names,
  state_names,
  col_to_keep = city_keep,
  cols_to_drop = city_drop,
  relate_host_location = TRUE
)
}
\arguments{
\item{df}{A data frame of the 'detailed_listings' type with redundant 
columns for cities, or with too multiple distinct codes for the same 
city.}

\item{city_names}{A list of city names to detect.}

\item{state_names}{A list of state names to detect.}

\item{col_to_keep}{Name of city column to keep.}

\item{cols_to_drop}{Names of city columns to drop.}

\item{relate_host_location}{If TRUE, adds a new column specifying 
if host lives in the same city as her/his listing.}
}
\value{
A data frame with a single factor column for city. The levels
of the factor are determined by \code{\link{city_names}}.
}
\description{
Clean columns with poorly coded city names and convert to factors.
}
\examples{
dirty_df <- data.frame(city = c("Portland", "Portland, Or", "OR", "San Fran, CA"),
                      location = c("Or, Port", "Portland", "port", "ca"),
                      host_location = c("Portland", "NYC", "Mars", "717 Potter St."))
city_codes <- c("Portland", "San Francisco")
state_codes <- c("OR", "CA")
clean_df <- factorize_city(dirty_df, 
                           city_names = city_codes, 
                           state_names = state_codes, 
                           col_to_keep = 'city',
                           cols_to_drop = c('location'),
                           relate_host_location = TRUE)
head(clean_df)
}
